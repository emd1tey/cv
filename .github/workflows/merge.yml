name: CI
on:
  push:
    branches: [dev]

permissions:
  pull-requests: write
  contents: write
  statuses: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: |
          pip install --upgrade pip && pip install poetry
          poetry config virtualenvs.create false
          poetry install --only main --no-interaction --no-ansi

      - name: Run code quality checks
        run: ruff check .

      - name: Run tests
        run: pytest

  create-merge-request:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ success() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Merge Request
        id: create_pr
        uses: repo-sync/pull-request@v2
        with:
          destination_branch: main
          source_branch: ${{ github.ref }}
          pr_title: Merge ${{ github.ref }} into main
          pr_body: Automated merge request from ${{ github.ref }} branch.

      - name: Set output
        run: |
          echo "pull_request_url=${{ steps.create_pr.outputs.pr_url }}" >> $GITHUB_ENV
          echo "pull_request_url=${{ steps.create_pr.outputs.pr_url }}" >> $GITHUB_STATE
          echo -e "PR_URL = $PR_URL  \nGITHUB_ENV = $GITHUB_ENV"


  approve-merge-request:
    runs-on: ubuntu-latest
    needs: create-merge-request
    if: ${{ success() }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Approve Merge Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_URL: ${{ env.pull_request_url }}
        run: |
          echo $GITHUB_ENV
          echo $PR_URL
          PR_NUMBER=$(echo "${PR_URL}" | awk -F'/' '{print $NF}')
          curl -X POST \
            -H "Authorization: token ${GITHUB_TOKEN}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/reviews \
            -d '{"event":"APPROVE"}'
